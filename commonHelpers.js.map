{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector(\"button\");\nbutton.disabled = true;\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n\n      if ( selectedDates[0] > new Date()) {\n            userSelectedDate = selectedDates[0];\n            button.disabled = false;\n        }\n        else\n      {\n          iziToast.error({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n        });\n          button.disabled = true;\n        }\n\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(date) {\n    for(let key in date) {\n        date[key] = String(date[key]).padStart(2, '0');\n    }\n    return date;\n}\n \nfunction updateTimer(date) {\n    const days = document.querySelector('[data-days]'); \n    const hours = document.querySelector('[data-hours]');\n    const minutes = document.querySelector('[data-minutes]');\n    const seconds = document.querySelector('[data-seconds]');\n\n    days.textContent = date.days;\n    hours.textContent = date.hours;\n    minutes.textContent = date.minutes;\n    seconds.textContent = date.seconds;\n\n}\n\nbutton.addEventListener('click', () => {\n    button.disabled = true;\n    input.disabled = true;\n\n    const timerInterval = setInterval(() => {\n \n        const currentDate = new Date().getTime();\n        if (userSelectedDate - currentDate <= 0) {\n            updateTimer(addLeadingZero(convertMs(0)));\n            clearInterval(timerInterval);\n            return;\n        }\n        updateTimer(addLeadingZero(convertMs(userSelectedDate - currentDate)));\n      }, 1000);\n\n});\n"],"names":["input","button","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","date","key","updateTimer","timerInterval","currentDate"],"mappings":"2GAQA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAClB,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CAEhBA,EAAc,CAAC,EAAI,IAAI,MACtBF,EAAmBE,EAAc,CAAC,EAClCH,EAAO,SAAW,KAIpBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACrB,CAAS,EACCJ,EAAO,SAAW,GAGzB,CACH,EAEAK,EAAUN,EAAOG,CAAO,EAExB,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAM,CAC1B,QAAQC,KAAOD,EACXA,EAAKC,CAAG,EAAI,OAAOD,EAAKC,CAAG,CAAC,EAAE,SAAS,EAAG,GAAG,EAEjD,OAAOD,CACX,CAEA,SAASE,EAAYF,EAAM,CACvB,MAAML,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDH,EAAK,YAAcK,EAAK,KACxBJ,EAAM,YAAcI,EAAK,MACzBH,EAAQ,YAAcG,EAAK,QAC3BF,EAAQ,YAAcE,EAAK,OAE/B,CAEAb,EAAO,iBAAiB,QAAS,IAAM,CACnCA,EAAO,SAAW,GAClBD,EAAM,SAAW,GAEjB,MAAMiB,EAAgB,YAAY,IAAM,CAEpC,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EACtC,GAAIhB,EAAmBgB,GAAe,EAAG,CACrCF,EAAYH,EAAeN,EAAU,CAAC,CAAC,CAAC,EACxC,cAAcU,CAAa,EAC3B,MACH,CACDD,EAAYH,EAAeN,EAAUL,EAAmBgB,CAAW,CAAC,CAAC,CACtE,EAAE,GAAI,CAEb,CAAC"}